{
  "contractName": "MToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"params\":{\"wallet\":\"Address of the wallet, where tokens will be transferred to\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/MToken.sol\":\"MToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Context.sol\":{\"keccak256\":\"0xe7c3e6cd8ce0a1ba9e93ea3fe8632288c9a1fd9af5787bc176c9f3807edb19a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f7d01bcb3573d33f3c91e3868dae48767b9eba62faaf169314c9fa60139d622\",\"dweb:/ipfs/Qma6ipAgpLVR7cwLenTGrgtA8svTy9qVRnGKssAEFb1Z91\"]},\"project:/contracts/ERC20.sol\":{\"keccak256\":\"0x4e145a4357d877ae382a18e847c4f18a6a46f81be406d288dd5d164c5977c2de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4bb12217d4a8c48f3221b4c97030546bc959976b62207b330597b5bb17cade5a\",\"dweb:/ipfs/QmdMGYnvvZ5pYt9f9iZDBezmBTU6CiFQHBXSfyuvUjob3H\"]},\"project:/contracts/IERC20.sol\":{\"keccak256\":\"0xa44fd36c228c38f648a8e8027653445d5bc2e375e5b148645663bdf7cb64ed54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://671d13f31a6949780f23d9460ad567e846e81b815a60f39efaea989eb875f6de\",\"dweb:/ipfs/QmePZ7dNV55sWtLJfaxPmoy5DtbjMpHUdxm5TDUskF4HfD\"]},\"project:/contracts/MToken.sol\":{\"keccak256\":\"0x754bf469a0ad2c46db54641de5c918c012f3b5d4342da3edc9b3d9ef24c3410a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16e98e4c92249226f42d9251786bb9d61e9b22e58888fff40083617a08a574b5\",\"dweb:/ipfs/QmezABaQugisFc4uXj54hLx55b4NVJ54AymuhFysdMBe1P\"]},\"project:/contracts/Ownable.sol\":{\"keccak256\":\"0x003a1b329b0ceac602a6ba1ca2867129acfbdf660dbd5c98303e9730f2be8157\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c12053a0fb697dd7d40e244e05329e6bc967dfad688c82a0bc906412ab4f1d38\",\"dweb:/ipfs/QmbhmXZVbGhmJ8o6Ew7CHFzvucjwNeDJPrEMuA3qg5CEmR\"]},\"project:/contracts/SafeMath.sol\":{\"keccak256\":\"0xe5db6ce5e283fdd2ebca150d0e4c4a09a53d94a48e8f34a147cea6e347f69436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d70973f5dc41cf2ef6a5e51c3b5e0d958c09b9e15cd492b5c840f331d53dcae\",\"dweb:/ipfs/QmdAA4fZAEFXPjxSgWuvC33yjypjt4VgXqbwcR8HMSqULd\"]},\"project:/contracts/authority.sol\":{\"keccak256\":\"0xaf56862805f6fe544657a84753609e79121d3658e07c2d304c846c622e4e2150\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2e3bac3332f7709865b137b389dae83ec0c38d8276c7ab7e51d006ed7dcbbb7\",\"dweb:/ipfs/Qmbcth9CE3g9p3hEVV5FtDy4NFi1PA5tQhewGZptgvg8ir\"]},\"project:/contracts/builtin.sol\":{\"keccak256\":\"0x59b68f636837710e492b02006dca597c45d70285c3edd4b5256c80cf637ac362\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67ee39194fc540f4786eec4d1b5ddd96ecb0847465fd1051e84c94f29eed19b9\",\"dweb:/ipfs/QmVZaujFghfPBERhaM9dzdCuWBbEoUkUsSQixKjiWRjpvz\"]},\"project:/contracts/energy.sol\":{\"keccak256\":\"0x494d62e6f3c1e3e8051af56e120491728afc22d98556628fce99bf14c6086513\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://998e00589f2f6ad653a8ee6fa1b946bfcc85ca9e5f0a0539300d507f6fdf517d\",\"dweb:/ipfs/QmZB2BTPWuhhQutqdcF435bqLz8RBcvdtKKrt3e6Km7Nv3\"]},\"project:/contracts/executor.sol\":{\"keccak256\":\"0xa0acb7c303f0eaccc1a6b0f82a955fb4f45a5c2035bdeb45861b85a28542c635\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad940ae144808c63adab0f2290eac8a6919c994a734d8d0baea6c2e506888ee2\",\"dweb:/ipfs/QmaDCB2pCMHj2x8vNzqmdtBAjSrYTdzGrqrR2ARpd55gmM\"]},\"project:/contracts/extension.sol\":{\"keccak256\":\"0xd83866d5759187b5b4cebd52900f38943c5d9558e07cfa14922325ed73b2345d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1148a27aaad61f86e50c0729da8a13c987c370ec4847fc3154cb13cf9d8c551b\",\"dweb:/ipfs/Qmey6hr5XqMRjtupmS93XfpSSsZWyepW9oExhQDjCXVUcT\"]},\"project:/contracts/params.sol\":{\"keccak256\":\"0x1047e99062dd849c13033cb9f0e0395ca85a02a00bd28743e5e3d46572fa4c9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26356482e4f01b6c601771f03b8e3266f61cf3f1c58b9afbcf4f3fd625868416\",\"dweb:/ipfs/QmdNnZENNU2QLrhJ8N1Wqaz7SgoH8HzosYnLozEKvKyeSb\"]},\"project:/contracts/prototype.sol\":{\"keccak256\":\"0x519ffc8f0a3305cb595dcd80a4dd129a88411246e01315201943ab053b3f2f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7991e291378cbfc04ec3023811fc345a512dff0ed111ca64d0552ab1ae07fb7c\",\"dweb:/ipfs/QmZ4B9pvfXUdGLEsnALRqKmkcQZkvV7eCXdUNHutajgKoV\"]}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162001b7f38038062001b7f833981810160405260208110156200003757600080fd5b8101908080519060200190929190505050601260ff1660808160ff1660f81b8152505060006200006c620001d460201b60201c565b905080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620001af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f43616e206e6f74206265207a65726f2077616c6c65740000000000000000000081525060200191505060405180910390fd5b620001cd816b025391ee35a05c54d0000000620001dc60201b60201c565b5062000448565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000280576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f45524332303a206d696e7420746f207a65726f2061646472657373000000000081525060200191505060405180910390fd5b6200029460008383620003ba60201b60201c565b620002b081600254620003bf60201b62000e4f1790919060201c565b6002819055506200030e816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620003bf60201b62000e4f1790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b6000808284019050838110156200043e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60805160f81c61171962000466600039806106cf52506117196000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610443578063a9059cbb146104a7578063dd62ed3e146104f5578063f2fde38b1461056d576100f5565b806370a082311461032a578063715018a6146103825780638da5cb5b1461038c57806395d89b41146103c0576100f5565b806323b872dd116100d357806323b872dd146101e9578063313ce56714610257578063395093511461027857806340c10f19146102dc576100f5565b806306fdde03146100fa578063095ea7b31461017d57806318160ddd146101cb575b600080fd5b6101026105b1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610142578082015181840152602081019050610127565b50505050905090810190601f16801561016f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101c96004803603604081101561019357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ee565b005b6101d3610604565b6040518082815260200191505060405180910390f35b610255600480360360608110156101ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061060e565b005b61025f6106cb565b604051808260ff16815260200191505060405180910390f35b6102c46004803603604081101561028e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106f3565b60405180821515815260200191505060405180910390f35b610328600480360360408110156102f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107a6565b005b61036c6004803603602081101561034057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061087e565b6040518082815260200191505060405180910390f35b61038a6108c6565b005b610394610a51565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103c8610a7b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104085780820151818401526020810190506103ed565b50505050905090810190601f1680156104355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61048f6004803603604081101561045957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ab8565b60405180821515815260200191505060405180910390f35b6104f3600480360360408110156104bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ba2565b005b6105576004803603604081101561050b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bb8565b6040518082815260200191505060405180910390f35b6105af6004803603602081101561058357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c3f565b005b60606040518060400160405280600c81526020017f52657761726420546f6b656e0000000000000000000000000000000000000000815250905090565b6106006105f9610ed7565b8383610edf565b5050565b6000600254905090565b610619838383611110565b60006106258484610bb8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106c557818110156106c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000081525060200191505060405180910390fd5b5b50505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600061079c610700610ed7565b846107978560016000610711610ed7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4f90919063ffffffff16565b610edf565b6001905092915050565b6107ae610ed7565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610870576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61087a828261140b565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6108ce610ed7565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610990576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606040518060400160405280600381526020017f544b4e0000000000000000000000000000000000000000000000000000000000815250905090565b6000610b98610ac5610ed7565b84610b93856040518060400160405280601e81526020017f45524332303a2064656372656173656420612e2062656c6f77207a65726f000081525060016000610b0c610ed7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115d29092919063ffffffff16565b610edf565b6001905092915050565b610bb4610bad610ed7565b8383611110565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610c47610ed7565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d09576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d8f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806116986026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080828401905083811015610ecd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f45524332303a612e2066726f6d207a65726f206164647265737300000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611025576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f45524332303a612e20746f207a65726f2061646472657373000000000000000081525060200191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156111b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f45524332303a742e2066726f6d207a65726f206164647265737300000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611256576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f45524332303a742e20746f207a65726f2061646472657373000000000000000081525060200191505060405180910390fd5b611261838383611692565b6112cc816040518060600160405280602681526020016116be602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115d29092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061135f816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f45524332303a206d696e7420746f207a65726f2061646472657373000000000081525060200191505060405180910390fd5b6114ba60008383611692565b6114cf81600254610e4f90919063ffffffff16565b600281905550611526816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600083831115829061167f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611644578082015181840152602081019050611629565b50505050905090810190601f1680156116715780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b50505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365a2646970667358221220a119f9d06c62f352039a1cc8c0b4e770282b779c58d1e415107368c7a05a4f0264736f6c63430007060033",
  "deployedBytecode": "",
  "immutableReferences": {
    "44": [
      {
        "length": 32,
        "start": 1743
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "136:383:3:-:0;;;276:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2071:2:1;2059:14;;;;;;;;;;;;888:17:5;908:12;:10;;;:12;;:::i;:::-;888:32;;940:9;931:6;;:18;;;;;;;;;;;;;;;;;;998:9;965:43;;994:1;965:43;;;;;;;;;;;;862:154;341:1:3;323:20;;:6;:20;;;;315:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;381:30;387:6;395:15;381:5;;;:30;;:::i;:::-;276:143;136:383;;602:106:0;655:15;690:10;683:17;;602:106;:::o;8415:374:1:-;8518:1;8499:21;;:7;:21;;;;8491:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8565:49;8594:1;8598:7;8607:6;8565:20;;;:49;;:::i;:::-;8642:24;8659:6;8642:12;;:16;;;;;;:24;;;;:::i;:::-;8627:12;:39;;;;8698:30;8721:6;8698:9;:18;8708:7;8698:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;8677:9;:18;8687:7;8677:18;;;;;;;;;;;;;;;:51;;;;8765:7;8744:37;;8761:1;8744:37;;;8774:6;8744:37;;;;;;;;;;;;;;;;;;8415:374;;:::o;11406:125::-;;;;:::o;901:181:6:-;959:7;979:9;995:1;991;:5;979:17;;1020:1;1015;:6;;1007:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1073:1;1066:8;;;901:181;;;;:::o;136:383:3:-;;;;;;;;;;;;",
  "deployedSourceMap": "136:383:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2151:83:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4347:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3226:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4995:451;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3078:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5855:302;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;425:91:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3389:162:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1739:148:5;;;:::i;:::-;;1097:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2353:87:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6660:395;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3764:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3999:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2042:244:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2151:83:1;2188:13;2221:5;;;;;;;;;;;;;;;;;2214:12;;2151:83;:::o;4347:166::-;4466:39;4475:12;:10;:12::i;:::-;4489:7;4498:6;4466:8;:39::i;:::-;4347:166;;:::o;3226:100::-;3279:7;3306:12;;3299:19;;3226:100;:::o;4995:451::-;5139:36;5149:6;5157:9;5168:6;5139:9;:36::i;:::-;5186:24;5213:28;5223:6;5231:9;5213;:28::i;:::-;5186:55;;5276:17;5256:16;:37;5252:187;;5356:6;5336:16;:26;;5310:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5252:187;4995:451;;;;:::o;3078:83::-;3119:5;3144:9;3137:16;;3078:83;:::o;5855:302::-;5972:4;5994:133;6017:12;:10;:12::i;:::-;6044:7;6066:50;6105:10;6066:11;:25;6078:12;:10;:12::i;:::-;6066:25;;;;;;;;;;;;;;;:34;6092:7;6066:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5994:8;:133::i;:::-;6145:4;6138:11;;5855:302;;;;:::o;425:91:3:-;1319:12:5;:10;:12::i;:::-;1309:22;;:6;;;;;;;;;;;:22;;;1301:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;495:17:3::1;501:2;505:6;495:5;:17::i;:::-;425:91:::0;;:::o;3389:162:1:-;3493:7;3525:9;:18;3535:7;3525:18;;;;;;;;;;;;;;;;3518:25;;3389:162;;;:::o;1739:148:5:-;1319:12;:10;:12::i;:::-;1309:22;;:6;;;;;;;;;;;:22;;;1301:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1846:1:::1;1809:40;;1830:6;;;;;;;;;;;1809:40;;;;;;;;;;;;1877:1;1860:6;;:19;;;;;;;;;;;;;;;;;;1739:148::o:0;1097:79::-;1135:7;1162:6;;;;;;;;;;;1155:13;;1097:79;:::o;2353:87:1:-;2392:13;2425:7;;;;;;;;;;;;;;;;;2418:14;;2353:87;:::o;6660:395::-;6782:4;6804:221;6827:12;:10;:12::i;:::-;6854:7;6876:138;6933:15;6876:138;;;;;;;;;;;;;;;;;:11;:25;6888:12;:10;:12::i;:::-;6876:25;;;;;;;;;;;;;;;:34;6902:7;6876:34;;;;;;;;;;;;;;;;:38;;:138;;;;;:::i;:::-;6804:8;:221::i;:::-;7043:4;7036:11;;6660:395;;;;:::o;3764:172::-;3886:42;3896:12;:10;:12::i;:::-;3910:9;3921:6;3886:9;:42::i;:::-;3764:172;;:::o;3999:201::-;4133:7;4165:11;:18;4177:5;4165:18;;;;;;;;;;;;;;;:27;4184:7;4165:27;;;;;;;;;;;;;;;;4158:34;;3999:201;;;;:::o;2042:244:5:-;1319:12;:10;:12::i;:::-;1309:22;;:6;;;;;;;;;;;:22;;;1301:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2151:1:::1;2131:22;;:8;:22;;;;2123:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2241:8;2212:38;;2233:6;;;;;;;;;;;2212:38;;;;;;;;;;;;2270:8;2261:6;;:17;;;;;;;;;;;;;;;;;;2042:244:::0;:::o;901:181:6:-;959:7;979:9;995:1;991;:5;979:17;;1020:1;1015;:6;;1007:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1073:1;1066:8;;;901:181;;;;:::o;602:106:0:-;655:15;690:10;683:17;;602:106;:::o;10016:360:1:-;10169:1;10152:19;;:5;:19;;;;10144:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10240:1;10221:21;;:7;:21;;;;10213:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10314:6;10284:11;:18;10296:5;10284:18;;;;;;;;;;;;;;;:27;10303:7;10284:27;;;;;;;;;;;;;;;:36;;;;10352:7;10336:32;;10345:5;10336:32;;;10361:6;10336:32;;;;;;;;;;;;;;;;;;10016:360;;;:::o;7545:588::-;7703:1;7685:20;;:6;:20;;;;7677:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7776:1;7755:23;;:9;:23;;;;7747:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7820:47;7841:6;7849:9;7860:6;7820:20;:47::i;:::-;7900:108;7936:6;7900:108;;;;;;;;;;;;;;;;;:9;:17;7910:6;7900:17;;;;;;;;;;;;;;;;:21;;:108;;;;;:::i;:::-;7880:9;:17;7890:6;7880:17;;;;;;;;;;;;;;;:128;;;;8042:32;8067:6;8042:9;:20;8052:9;8042:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;8019:9;:20;8029:9;8019:20;;;;;;;;;;;;;;;:55;;;;8107:9;8090:35;;8099:6;8090:35;;;8118:6;8090:35;;;;;;;;;;;;;;;;;;7545:588;;;:::o;8415:374::-;8518:1;8499:21;;:7;:21;;;;8491:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8565:49;8594:1;8598:7;8607:6;8565:20;:49::i;:::-;8642:24;8659:6;8642:12;;:16;;:24;;;;:::i;:::-;8627:12;:39;;;;8698:30;8721:6;8698:9;:18;8708:7;8698:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8677:9;:18;8687:7;8677:18;;;;;;;;;;;;;;;:51;;;;8765:7;8744:37;;8761:1;8744:37;;;8774:6;8744:37;;;;;;;;;;;;;;;;;;8415:374;;:::o;1804:226:6:-;1924:7;1957:1;1952;:6;;1960:12;1944:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1984:9;2000:1;1996;:5;1984:17;;2021:1;2014:8;;;1804:226;;;;;:::o;11406:125:1:-;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.7.6;\r\nimport \"./ERC20.sol\";\r\nimport \"./Ownable.sol\";\r\n\r\nimport \"./builtin.sol\";\r\n\r\ncontract MToken is ERC20, Ownable {\r\n    /**\r\n     * @param wallet Address of the wallet, where tokens will be transferred to\r\n     */\r\n    constructor(address wallet) {\r\n        require(wallet != address(0), \"Can not be zero wallet\");\r\n        _mint(wallet, 720000000 ether);\r\n    }\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n}\r\n}\r\n",
  "sourcePath": "C:\\Users\\paula_dp5y8vd\\token\\contracts\\MToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/MToken.sol",
    "exportedSymbols": {
      "Authority": [
        943
      ],
      "Builtin": [
        1351
      ],
      "Context": [
        11
      ],
      "ERC20": [
        432
      ],
      "Energy": [
        1446
      ],
      "Executor": [
        1498
      ],
      "Extension": [
        1572
      ],
      "IERC20": [
        504
      ],
      "MToken": [
        551
      ],
      "Ownable": [
        693
      ],
      "Params": [
        1595
      ],
      "Prototype": [
        1746
      ],
      "SafeMath": [
        889
      ]
    },
    "id": 552,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 506,
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:22:3"
      },
      {
        "absolutePath": "project:/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 507,
        "nodeType": "ImportDirective",
        "scope": 552,
        "sourceUnit": 433,
        "src": "59:21:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 508,
        "nodeType": "ImportDirective",
        "scope": 552,
        "sourceUnit": 694,
        "src": "82:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/builtin.sol",
        "file": "./builtin.sol",
        "id": 509,
        "nodeType": "ImportDirective",
        "scope": 552,
        "sourceUnit": 1352,
        "src": "109:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 510,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 432,
              "src": "155:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$432",
                "typeString": "contract ERC20"
              }
            },
            "id": 511,
            "nodeType": "InheritanceSpecifier",
            "src": "155:5:3"
          },
          {
            "baseName": {
              "id": 512,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 693,
              "src": "162:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$693",
                "typeString": "contract Ownable"
              }
            },
            "id": 513,
            "nodeType": "InheritanceSpecifier",
            "src": "162:7:3"
          }
        ],
        "contractDependencies": [
          11,
          432,
          504,
          693
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 551,
        "linearizedBaseContracts": [
          551,
          693,
          432,
          504,
          11
        ],
        "name": "MToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "304:115:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 520,
                          "name": "wallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 516,
                          "src": "323:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "341:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "333:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 521,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "333:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "333:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "323:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206e6f74206265207a65726f2077616c6c6574",
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "345:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb4d48176e6041826de69eccf541c51005a47f8c3cf4eb6600cb1842f3748ccf",
                          "typeString": "literal_string \"Can not be zero wallet\""
                        },
                        "value": "Can not be zero wallet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb4d48176e6041826de69eccf541c51005a47f8c3cf4eb6600cb1842f3748ccf",
                          "typeString": "literal_string \"Can not be zero wallet\""
                        }
                      ],
                      "id": 519,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "315:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "315:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "315:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 530,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "387:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "373230303030303030",
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "395:15:3",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_720000000000000000000000000_by_1",
                          "typeString": "int_const 720000000000000000000000000"
                        },
                        "value": "720000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_720000000000000000000000000_by_1",
                          "typeString": "int_const 720000000000000000000000000"
                        }
                      ],
                      "id": 529,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "381:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "381:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 533,
                  "nodeType": "ExpressionStatement",
                  "src": "381:30:3"
                }
              ]
            },
            "documentation": {
              "id": 514,
              "nodeType": "StructuredDocumentation",
              "src": "177:93:3",
              "text": " @param wallet Address of the wallet, where tokens will be transferred to"
            },
            "id": 535,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "288:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "288:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "287:16:3"
            },
            "returnParameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "304:0:3"
            },
            "scope": 551,
            "src": "276:143:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 549,
              "nodeType": "Block",
              "src": "484:32:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 545,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "501:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 546,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 539,
                        "src": "505:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 544,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "495:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "495:17:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 548,
                  "nodeType": "ExpressionStatement",
                  "src": "495:17:3"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 550,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 542,
                "modifierName": {
                  "id": 541,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 642,
                  "src": "474:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "474:9:3"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 550,
                  "src": "439:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 539,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 550,
                  "src": "451:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "438:28:3"
            },
            "returnParameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:3"
            },
            "scope": 551,
            "src": "425:91:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 552,
        "src": "136:383:3"
      }
    ],
    "src": "35:486:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/MToken.sol",
      "exportedSymbols": {
        "Authority": [
          943
        ],
        "Builtin": [
          1351
        ],
        "Context": [
          11
        ],
        "ERC20": [
          432
        ],
        "Energy": [
          1446
        ],
        "Executor": [
          1498
        ],
        "Extension": [
          1572
        ],
        "IERC20": [
          504
        ],
        "MToken": [
          551
        ],
        "Ownable": [
          693
        ],
        "Params": [
          1595
        ],
        "Prototype": [
          1746
        ],
        "SafeMath": [
          889
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.7",
            ".6"
          ]
        },
        "id": 506,
        "name": "PragmaDirective",
        "src": "35:22:3"
      },
      {
        "attributes": {
          "SourceUnit": 433,
          "absolutePath": "project:/contracts/ERC20.sol",
          "file": "./ERC20.sol",
          "scope": 552,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 507,
        "name": "ImportDirective",
        "src": "59:21:3"
      },
      {
        "attributes": {
          "SourceUnit": 694,
          "absolutePath": "project:/contracts/Ownable.sol",
          "file": "./Ownable.sol",
          "scope": 552,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 508,
        "name": "ImportDirective",
        "src": "82:23:3"
      },
      {
        "attributes": {
          "SourceUnit": 1352,
          "absolutePath": "project:/contracts/builtin.sol",
          "file": "./builtin.sol",
          "scope": 552,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 509,
        "name": "ImportDirective",
        "src": "109:23:3"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            11,
            432,
            504,
            693
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            551,
            693,
            432,
            504,
            11
          ],
          "name": "MToken",
          "scope": 552
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 432,
                  "type": "contract ERC20"
                },
                "id": 510,
                "name": "UserDefinedTypeName",
                "src": "155:5:3"
              }
            ],
            "id": 511,
            "name": "InheritanceSpecifier",
            "src": "155:5:3"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Ownable",
                  "referencedDeclaration": 693,
                  "type": "contract Ownable"
                },
                "id": 512,
                "name": "UserDefinedTypeName",
                "src": "162:7:3"
              }
            ],
            "id": 513,
            "name": "InheritanceSpecifier",
            "src": "162:7:3"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 551,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @param wallet Address of the wallet, where tokens will be transferred to"
                },
                "id": 514,
                "name": "StructuredDocumentation",
                "src": "177:93:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "wallet",
                      "scope": 535,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 515,
                        "name": "ElementaryTypeName",
                        "src": "288:7:3"
                      }
                    ],
                    "id": 516,
                    "name": "VariableDeclaration",
                    "src": "288:14:3"
                  }
                ],
                "id": 517,
                "name": "ParameterList",
                "src": "287:16:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 518,
                "name": "ParameterList",
                "src": "304:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_cb4d48176e6041826de69eccf541c51005a47f8c3cf4eb6600cb1842f3748ccf",
                                  "typeString": "literal_string \"Can not be zero wallet\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 519,
                            "name": "Identifier",
                            "src": "315:7:3"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 516,
                                  "type": "address",
                                  "value": "wallet"
                                },
                                "id": 520,
                                "name": "Identifier",
                                "src": "323:6:3"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 521,
                                        "name": "ElementaryTypeName",
                                        "src": "333:7:3"
                                      }
                                    ],
                                    "id": 522,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "333:7:3"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 523,
                                    "name": "Literal",
                                    "src": "341:1:3"
                                  }
                                ],
                                "id": 524,
                                "name": "FunctionCall",
                                "src": "333:10:3"
                              }
                            ],
                            "id": 525,
                            "name": "BinaryOperation",
                            "src": "323:20:3"
                          },
                          {
                            "attributes": {
                              "hexvalue": "43616e206e6f74206265207a65726f2077616c6c6574",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Can not be zero wallet\"",
                              "value": "Can not be zero wallet"
                            },
                            "id": 526,
                            "name": "Literal",
                            "src": "345:24:3"
                          }
                        ],
                        "id": 527,
                        "name": "FunctionCall",
                        "src": "315:55:3"
                      }
                    ],
                    "id": 528,
                    "name": "ExpressionStatement",
                    "src": "315:55:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_720000000000000000000000000_by_1",
                                  "typeString": "int_const 720000000000000000000000000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 375,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 529,
                            "name": "Identifier",
                            "src": "381:5:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 516,
                              "type": "address",
                              "value": "wallet"
                            },
                            "id": 530,
                            "name": "Identifier",
                            "src": "387:6:3"
                          },
                          {
                            "attributes": {
                              "hexvalue": "373230303030303030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": "ether",
                              "token": "number",
                              "type": "int_const 720000000000000000000000000",
                              "value": "720000000"
                            },
                            "id": 531,
                            "name": "Literal",
                            "src": "395:15:3"
                          }
                        ],
                        "id": 532,
                        "name": "FunctionCall",
                        "src": "381:30:3"
                      }
                    ],
                    "id": 533,
                    "name": "ExpressionStatement",
                    "src": "381:30:3"
                  }
                ],
                "id": 534,
                "name": "Block",
                "src": "304:115:3"
              }
            ],
            "id": 535,
            "name": "FunctionDefinition",
            "src": "276:143:3"
          },
          {
            "attributes": {
              "functionSelector": "40c10f19",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "mint",
              "scope": 551,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 550,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 536,
                        "name": "ElementaryTypeName",
                        "src": "439:7:3"
                      }
                    ],
                    "id": 537,
                    "name": "VariableDeclaration",
                    "src": "439:10:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 550,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 538,
                        "name": "ElementaryTypeName",
                        "src": "451:7:3"
                      }
                    ],
                    "id": 539,
                    "name": "VariableDeclaration",
                    "src": "451:14:3"
                  }
                ],
                "id": 540,
                "name": "ParameterList",
                "src": "438:28:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 543,
                "name": "ParameterList",
                "src": "484:0:3"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 642,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 541,
                    "name": "Identifier",
                    "src": "474:9:3"
                  }
                ],
                "id": 542,
                "name": "ModifierInvocation",
                "src": "474:9:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 375,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 544,
                            "name": "Identifier",
                            "src": "495:5:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 537,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 545,
                            "name": "Identifier",
                            "src": "501:2:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 539,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 546,
                            "name": "Identifier",
                            "src": "505:6:3"
                          }
                        ],
                        "id": 547,
                        "name": "FunctionCall",
                        "src": "495:17:3"
                      }
                    ],
                    "id": 548,
                    "name": "ExpressionStatement",
                    "src": "495:17:3"
                  }
                ],
                "id": 549,
                "name": "Block",
                "src": "484:32:3"
              }
            ],
            "id": 550,
            "name": "FunctionDefinition",
            "src": "425:91:3"
          }
        ],
        "id": 551,
        "name": "ContractDefinition",
        "src": "136:383:3"
      }
    ],
    "id": 552,
    "name": "SourceUnit",
    "src": "35:486:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xa98Ce4051A0d1cb1c0025b13DaB371239fD0C257",
      "transactionHash": "0xb3999c90c910ecf85e683a5d4a662693ea805a8b166d17135719eff069a15fb8"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-09-17T15:37:47.222Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "params": {
          "wallet": "Address of the wallet, where tokens will be transferred to"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}